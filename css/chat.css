.header-wrapper {
  background-color: white;
  z-index: 2; /*layer의 순서로 문제가 발생했을 때*/
  padding: 5px 0px;
  position: fixed;
  top: 0px;
  width: 100%;
  box-shadow: rgba(0, 0, 0, 0.2) 0px 8px 16px 3px,
    rgba(0, 0, 0, 0.024) 0px -6px 16px -6px;
}
.chats-body {
  padding: 10px 0px;
  padding-top: 120px;
}

.chats-body .header,
.chats-body .status-bar {
  padding: 0px 20px;
}
.chats-body {
  background-image: url(../images/chatBG.png);
  min-height: 400vh;
  /* viewpoint height  == screen */
}
.chat__write-container {
  position: fixed;
  bottom: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0px 20px;
  width: 100%;
  /* fixed가 적용된 상자를 가운데로 정렬하는 방법 */
  margin: 0 auto;
  left: 0;
  right: 0;
}
.chat__icon-left {
  position: absolute;
}
.chat__icon-right {
  position: absolute;
  right: 10px;
}
@keyframes float {
  0% {
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  50% {
    box-shadow: 0 30px 60px -60px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
  100% {
    box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
      0 18px 36px -18px rgba(0, 0, 0, 0.3),
      0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  }
}
.chat__write {
  margin: 0 auto; /*margin을 animate할 순 없다*/
  bottom: 0px;
  width: 100%;
  border-radius: 0;
  padding: 20px 60px;
  width: 100%;
  border: none;
  font-size: 14px;
  transition: width 0.5s ease-in-out, border-radius 0.5s ease-in-out,
    transform 0.5s ease-in-out; /*focus할 때의 transition*/
  /*중요한 건 input 다음에 icon div를 추가해서 아래에서 ~sibling seclector를 사용할 수 있었다 ☆ */
}
.chat__write:focus {
  outline: none;
  width: 80%;
  transform: translateY(-80px);
  border-radius: 40px;
  box-shadow: 0 30px 60px -12px rgba(50, 50, 93, 0.25),
    0 18px 36px -18px rgba(0, 0, 0, 0.3), 0 -12px 36px -8px rgba(0, 0, 0, 0.025);
  /* box-shadow: 0 18px 36px -18px rgba(0, 0, 0, 0.3),
    0 -12px 36px -8px rgba(0, 0, 0, 0.025); */
  /* 0px -8px 10px rgba(0, 0, 0, 0.2)*/
  /* 수직방향 / 수평방향 / 블러값  / rgba(마지막 값은 opacity)  한 번 더 추가하는 이유는 위 쪽에도 shadow넣기위해서 */
  animation: float 3s linear infinite forwards;
}
.chat__icon {
  font-size: 18px;
  transition: opacity 0.5s ease-in-out;
}
.chat__write:focus ~ .chat__icon {
  opacity: 0; /*안보이게끔 즉 ~sibling selector를 이용하여 wrrite 옆의 것들을*/
}
/* ~을 쓰는 이유는 sibling에 효과를 주기위해 즉 옆에있는 친구한테 효과를준다
html에서 input 옆에 아이콘을 둬야하는 이유가 바로 이를 이용하기위해서 input박스 안에 아이콘이
있으면 안된다
*/

.message__avatar {
  height: 100px;
  width: 100px;
}
.chat__write i {
  font-size: 22px;
}
.chat__write-column:nth-child(2) {
  width: 80%;
}
.chat-screen .chat__messages {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding-top: 30px;
  border-top: 1px solid #f7f7f7;
  padding: 0px 20px;
}
.chat__messages .chat__timestamp {
  background-color: white;
  font-size: 12px;
  padding: 5px 10px;
  border-radius: 10px;
  margin-bottom: 30px;

  text-transform: uppercase;
  font-weight: 700;
}
.message {
  display: flex;
  align-items: flex-start;
  margin-bottom: 20px;
}
/* .message .message__content {
  width: 80%;
} */
@keyframes spin {
  from {
    transform: none;
  }
  to {
    transform: rotateY(1turn);
  }
}
.incoming-message img {
  width: 40px;
  height: 50px;
  border-radius: 15px;
  margin-right: 15px;
  animation: spin 5s linear infinite;
  box-shadow: rgba(0, 0, 0, 0.2) 0px 8px 16px 3px,
    rgba(0, 0, 0, 0.024) 0px -6px 16px -6px;
}

.incoming-message {
  align-self: flex-start;
}
.sent-message {
  align-self: flex-end;
}
.message .message__bubble {
  padding: 10px 20px;
  background-color: white;
  border-radius: 30px;
  display: block;
  font-weight: 500;
}
.incoming-message .message__author {
  margin-bottom: 10px;
  display: block;
  font-weight: 600;
  font-size: 12px;
}
.incoming-message .message__bubble {
  border-bottom-left-radius: 0px;
  background-image: linear-gradient(to right, #757f9a, #d7dde8);
  box-shadow: rgba(0, 0, 0, 0.2) 0px 8px 16px 3px,
    rgba(0, 0, 0, 0.024) 0px -6px 16px -6px;
}
.sent-message .message__bubble {
  border-bottom-right-radius: 0px;
  background-image: linear-gradient(to right, #ede574, #f2c94c);
}
@keyframes incomingAnim {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }
  to {
    opacity: 1;
    transform: none;
  }
}
.incoming-message {
  animation: incomingAnim 0.5s ease-out forwards;
}
@keyframes sentAnim {
  from {
    opacity: 0;
    transform: translateX(200px);
  }
  to {
    opacity: 1;
    transform: none;
  }
}
.sent-message {
  animation: sentAnim 0.5s ease-out forwards;
  /*forward키워드는  여기서 같은 경우 
  to {
    opacity: 1;
    transform: none;
  }에서 지정해준 opacity와 transform이 계속 유지되게 해주도록 설정하는 것
  */
}
